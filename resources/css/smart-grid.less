@columns: 12;
@atom: (100% / @columns);

@break_lg: 1160px;
@break_md: 960px;
@break_sm: 900px;
@break_xs: 560px;

@offset: 20px;
@offset_lg: @offset;
@offset_md: @offset;
@offset_sm: @offset;
@offset_xs: @offset;

@offset_one_side: (@offset / 2);
@offset_lg_one_side: (@offset_lg / 2);
@offset_md_one_side: (@offset_md / 2);
@offset_sm_one_side: (@offset_sm / 2);
@offset_xs_one_side: (@offset_xs / 2);

@fields: 32px;
@fields_sm: 16px;

.wrapper-full() {
  padding-left: @fields;
  padding-right: @fields;

  .sm-block({
    padding-left: @fields_sm;
    padding-right: @fields_sm;
  });
}

.row-offsets() {
  margin-left: (@offset_one_side * -1);
  margin-right: (@offset_one_side * -1);
}

.col-offsets(@type) {
    @{type}-left: @offset_one_side;
    @{type}-right: @offset_one_side;
}

.wrapper() {
  max-width: 1160px;
  margin: 0 auto;
  .wrapper-full();
}

.row-flex() {
  display: flex;
  flex-wrap: wrap;
  .row-offsets();
}

.row-float() {
  .row-offsets();
  .clearfix();
}

.row-ib() {
  .row-offsets();
}

.col() {
  box-sizing: border-box;
  word-wrap: break-word;
  .col-offsets(margin);
}

.col-float() {
  float: left;
}

.col-ib() {
  display: inline-block;
  vertical-align: top;
}

.col-padding() {
  word-wrap: break-word;
  .col-offsets(padding);
}

.size(@n) {
  @val: 100% / @columns * @n;
  width: ~"calc(@{val} - @{offset})";
}

.size-lg(@n) {
  @val: 100% / @columns * @n;
  .lg(width, ~"calc(@{val} - @{offset_lg})");
}

.size-md(@n) {
  @val: 100% / @columns * @n;
  .md(width, ~"calc(@{val} - @{offset_md})");
}

.size-sm(@n) {
  @val: 100% / @columns * @n;
  .sm(width, ~"calc(@{val} - @{offset_sm})");
}

.size-xs(@n) {
  @val: 100% / @columns * @n;
  .xs(width, ~"calc(@{val} - @{offset_xs})");
}

.shift(@n) {
  @val: 100% / @columns * @n;
  margin-left: ~"calc(@{val} + @{offset_one_side})";
  margin-right: ~"calc(@{val} + @{offset_one_side})";
}

.shift-left(@n) {
  @val: 100% / @columns * @n;
  margin-left: ~"calc(@{val} + @{offset_one_side})";
}

.shift-right(@n) {
  @val: 100% / @columns * @n;
  margin-right: ~"calc(@{val} + @{offset_one_side})";
}

.shift-padding(@n) {
  @val: 100% / @columns * @n;
  padding-left: ~"calc(@{val} + @{offset_one_side})";
  padding-right: ~"calc(@{val} + @{offset_one_side})";
}

.shift-padding-left(@n) {
  @val: 100% / @columns * @n;
  padding-left: ~"calc(@{val} + @{offset_one_side})";
}

.shift-padding-right(@n) {
  @val: 100% / @columns * @n;
  padding-right: ~"calc(@{val} + @{offset_one_side})";
}

.shift-lg(@n) {
  @val: 100% / @columns * @n;
  .lg(margin-left, ~"calc(@{val} + @{offset_lg_one_side})");
  .lg(margin-right, ~"calc(@{val} + @{offset_lg_one_side})");
}

.shift-lg-left(@n) {
  @val: 100% / @columns * @n;
  .lg(margin-left, ~"calc(@{val} + @{offset_lg_one_side})");
}

.shift-lg-right(@n) {
  @val: 100% / @columns * @n;
  .lg(margin-right, ~"calc(@{val} + @{offset_lg_one_side})");
}

.shift-lg-padding(@n) {
  @val: 100% / @columns * @n;
  .lg(padding-left, ~"calc(@{val} + @{offset_lg_one_side})");
  .lg(padding-right, ~"calc(@{val} + @{offset_lg_one_side})");
}

.shift-lg-padding-left(@n) {
  @val: 100% / @columns * @n;
  .lg(padding-left, ~"calc(@{val} + @{offset_lg_one_side})");
}

.shift-lg-padding-right(@n) {
  @val: 100% / @columns * @n;
  .lg(padding-right, ~"calc(@{val} + @{offset_lg_one_side})");
}

.shift-md(@n) {
  @val: 100% / @columns * @n;
  .md(margin-left, ~"calc(@{val} + @{offset_md_one_side})");
  .md(margin-right, ~"calc(@{val} + @{offset_md_one_side})");
}

.shift-md-left(@n) {
  @val: 100% / @columns * @n;
  .md(margin-left, ~"calc(@{val} + @{offset_md_one_side})");
}

.shift-md-right(@n) {
  @val: 100% / @columns * @n;
  .md(margin-right, ~"calc(@{val} + @{offset_md_one_side})");
}

.shift-md-padding(@n) {
  @val: 100% / @columns * @n;
  .md(padding-left, ~"calc(@{val} + @{offset_md_one_side})");
  .md(padding-right, ~"calc(@{val} + @{offset_md_one_side})");
}

.shift-md-padding-left(@n) {
  @val: 100% / @columns * @n;
  .md(padding-left, ~"calc(@{val} + @{offset_md_one_side})");
}

.shift-md-padding-right(@n) {
  @val: 100% / @columns * @n;
  .md(padding-right, ~"calc(@{val} + @{offset_md_one_side})");
}

.shift-sm(@n) {
  @val: 100% / @columns * @n;
  .sm(margin-left, ~"calc(@{val} + @{offset_sm_one_side})");
  .sm(margin-right, ~"calc(@{val} + @{offset_sm_one_side})");
}

.shift-sm-left(@n) {
  @val: 100% / @columns * @n;
  .sm(margin-left, ~"calc(@{val} + @{offset_sm_one_side})");
}

.shift-sm-right(@n) {
  @val: 100% / @columns * @n;
  .sm(margin-right, ~"calc(@{val} + @{offset_sm_one_side})");
}

.shift-sm-padding(@n) {
  @val: 100% / @columns * @n;
  .sm(padding-left, ~"calc(@{val} + @{offset_sm_one_side})");
  .sm(padding-right, ~"calc(@{val} + @{offset_sm_one_side})");
}

.shift-sm-padding-left(@n) {
  @val: 100% / @columns * @n;
  .sm(padding-left, ~"calc(@{val} + @{offset_sm_one_side})");
}

.shift-sm-padding-right(@n) {
  @val: 100% / @columns * @n;
  .sm(padding-right, ~"calc(@{val} + @{offset_sm_one_side})");
}

.shift-xs(@n) {
  @val: 100% / @columns * @n;
  .xs(margin-left, ~"calc(@{val} + @{offset_xs_one_side})");
  .xs(margin-right, ~"calc(@{val} + @{offset_xs_one_side})");
}

.shift-xs-left(@n) {
  @val: 100% / @columns * @n;
  .xs(margin-left, ~"calc(@{val} + @{offset_xs_one_side})");
}

.shift-xs-right(@n) {
  @val: 100% / @columns * @n;
  .xs(margin-right, ~"calc(@{val} + @{offset_xs_one_side})");
}

.shift-xs-padding(@n) {
  @val: 100% / @columns * @n;
  .xs(padding-left, ~"calc(@{val} + @{offset_xs_one_side})");
  .xs(padding-right, ~"calc(@{val} + @{offset_xs_one_side})");
}

.shift-xs-padding-left(@n) {
  @val: 100% / @columns * @n;
  .xs(padding-left, ~"calc(@{val} + @{offset_xs_one_side})");
}

.shift-xs-padding-right(@n) {
  @val: 100% / @columns * @n;
  .xs(padding-right, ~"calc(@{val} + @{offset_xs_one_side})");
}

.lg(@name, @value) {
  @media screen and (max-width: @break_lg) {
      @{name}: @value;
  }
}

.lg-block(@content) {
  @media screen and (max-width: @break_lg) {
    @content();
  }
}

.md(@name, @value) {
  @media screen and (max-width: @break_md) {
      @{name}: @value;
  }
}

.md-block(@content) {
  @media screen and (max-width: @break_md) {
    @content();
  }
}

.sm(@name, @value) {
  @media screen and (max-width: @break_sm) {
      @{name}: @value;
  }
}

.sm-block(@content) {
  @media screen and (max-width: @break_sm) {
    @content();
  }
}

.xs(@name, @value) {
  @media screen and (max-width: @break_xs) {
      @{name}: @value;
  }
}

.xs-block(@content) {
  @media screen and (max-width: @break_xs) {
    @content();
  }
}

.from(@min_width, @content) {
  @media screen and (min-width: @min_width) {
    @content();
  }
}

.to(@max_width, @content) {
  @media screen and (max-width: @max_width) {
    @content();
  }
}

.from-to(@min_width, @max_width, @content) {
  @media screen and (min-width: @min_width) and (max-width: @max_width) {
    @content();
  }
}

.u-row-flex(@offset) {
  display: flex;
  flex-wrap: wrap;
  margin-left: (@offset / -2);
  margin-right: (@offset / -2);
}

.u-col(@offset) {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: (@offset / 2);
  margin-right: (@offset / 2);
}

.u-size(@n, @columns, @offset) {
  width: ~"calc(100% / @{columns} * @{n} - @{offset})";
}

.reset() {
  body, div, dl, dt, dd, ul, li, h1, h2, h3, h4, h5, h6, pre, code, form, fieldset, input, textarea, p, blockquote, th, td {
    margin: 0;
    padding: 0;
  }
  table {
    border-collapse: collapse;
    border-spacing: 0;
  }
  fieldset, img, abbr {
    border: 0;
  }
  address, caption, cite, code, dfn, em, strong, th, var {
    font-style: normal;
    font-weight: normal;
  }
  ul li {
    list-style: none;
  }
  caption, th {
    text-align: left;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: 100%;
    font-weight: normal;
  }
  sup {
    vertical-align: text-top;
  }
  sub {
    vertical-align: text-bottom;
  }
  input, textarea, select {
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
  }
  legend {
    color: #000;
  }
  article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section, main {
    display: block;
  }
  img {
    max-width: 100%;
    height: auto;
  }

  div {
    box-sizing: border-box;
  }

  strong {
    font-weight: bold !important;
    font-size: inherit;
  }
}

.debug(@background, @outline) {
  height: 100vh;
  position: fixed;
  width: 100%;

  > div {
    height: inherit;
    .wrapper();

    > div {
      height: inherit;
      .row-flex();

      > div {
        .col();
        .size(1);
        height: inherit;
        outline: @outline;
        background: @background;
      }
    }
  }
}

.clearfix() {
  &::after {
    display: block;
    content: "";
    clear: both;
    //background: url("../img/fonts/opensans/open_sans.svg") no-repeat left 0px;
  }
}

.reset;


////////// PRESETS

@font-face {
  font-family: 'Montserrat';
  src: url('fonts/Montserrat-Regular.eot');
  src: local('Montserrat Regular'), local('Montserrat-Regular'),
  url('fonts/Montserrat-Regular.eot?#iefix') format('embedded-opentype'),
  url('fonts/Montserrat-Regular.woff') format('woff'),
  url('fonts/Montserrat-Regular.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Montserrat';
  src: url('fonts/Montserrat-Medium.eot');
  src: local('Montserrat Medium'), local('Montserrat-Medium'),
  url('fonts/Montserrat-Medium.eot?#iefix') format('embedded-opentype'),
  url('fonts/Montserrat-Medium.woff') format('woff'),
  url('fonts/Montserrat-Medium.ttf') format('truetype');
  font-weight: 500;
  font-style: normal;
}

@font-face {
  font-family: 'Montserrat-Bold';
  src: url('fonts/Montserrat-Bold.eot');
  src: local('Montserrat Bold'), local('Montserrat-Bold'),
  url('fonts/Montserrat-Bold.eot?#iefix') format('embedded-opentype'),
  url('fonts/Montserrat-Bold.woff') format('woff'),
  url('fonts/Montserrat-Bold.ttf') format('truetype');
  font-weight: bold;
  font-style: normal;
}

@font-face {
  font-family: 'Montserrat-Black';
  src: url('fonts/Montserrat-Black.eot');
  src: local('Montserrat Black'), local('Montserrat-Black'),
  url('fonts/Montserrat-Black.eot?#iefix') format('embedded-opentype'),
  url('fonts/Montserrat-Black.woff') format('woff'),
  url('fonts/Montserrat-Black.ttf') format('truetype');
  font-weight: 900;
  font-style: normal;
}

@font-face {
  font-family: 'Montserrat';
  src: url('fonts/Montserrat-LightItalic.eot');
  src: local('Montserrat Light Italic'), local('Montserrat-LightItalic'),
  url('fonts/Montserrat-LightItalic.eot?#iefix') format('embedded-opentype'),
  url('fonts/Montserrat-LightItalic.woff') format('woff'),
  url('fonts/Montserrat-LightItalic.ttf') format('truetype');
  font-weight: 300;
  font-style: italic;
}

@font-face {
  font-family: 'Montserrat ExtraLight';
  src: url('fonts/Montserrat-ExtraLight.eot');
  src: local('Montserrat ExtraLight'), local('Montserrat-ExtraLight'),
  url('fonts/Montserrat-ExtraLight.eot?#iefix') format('embedded-opentype'),
  url('fonts/Montserrat-ExtraLight.woff') format('woff'),
  url('fonts/Montserrat-ExtraLight.ttf') format('truetype');
  font-weight: 200;
  font-style: normal;
}

@import "preset";

section, footer, header, .container, [role="grid"] {
  box-sizing: border-box;
  width: 100%;

  > div {
    .wrapper();

    > div, > form {
      .row-flex();
    }
  }
}

html {
  //min-height: 100vh;
}

body {
  .regular;
  font-size: 16px;
  color: @color-text;
  position: relative;
  background: @color-bg;

/*  &:after {
    content: '';
    display: block;
    width: 100%;
    height: 20000px;
    position: absolute;
    top: 0;
    z-index: -5;

    //background: url("../img/bg.png") no-repeat center 6px;

  }*/

  /*  .sm-block({
      font-size: 14px;
      position: relative;
      &:after {
        content: '';
        display: block;
        width: 100%;
        min-height: 100%;
        position: absolute;
        top: 0px;
        left: 0px;
        z-index: -1;
        //background: url("../img/bg/820.png") no-repeat center 0px;
      }
    });*/


}

.btn {
  outline: none;
  padding: 0 36px;
  margin: 0;
  height: 65px;
  border-radius: 65px;
  box-sizing: border-box;
  font-size: 24px;
  .bold;
  text-transform: uppercase;

  &.accent {
    border: 2px solid @color-accent;
    background: @color-accent;
    color: @color-light;
  }

  &.light {
    border: 2px solid @color-light;
    background: transparent;
    color: @color-light;
  }

  &.dark {
    border: 2px solid @color-text;
    background: @color-text;
    color: @color-light;
  }
}

button.lightweight {
  padding: 7px;
  border: none;
  cursor: pointer;
  background: transparent;
  font-size: 18px;
}

button.simple {
  padding: 0;
  margin: 0;
  border: none;
  cursor: pointer;
}



input[type="text"].lightweight {
  border: none;
  border-bottom: 1px solid @color-border;
  background: transparent;
}
